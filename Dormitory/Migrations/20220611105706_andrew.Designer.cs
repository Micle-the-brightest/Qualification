// <auto-generated />
using System;
using Dormitory.Entityes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dormitory.Migrations
{
    [DbContext(typeof(DormitoryContext))]
    [Migration("20220611105706_andrew")]
    partial class andrew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dormitory.Entityes.Dormitory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BuldingName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FreeBedCount")
                        .HasColumnType("integer");

                    b.Property<int>("PersonCount")
                        .HasColumnType("integer");

                    b.Property<int>("PostIndex")
                        .HasColumnType("integer");

                    b.Property<int>("RoomCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Dormitories");
                });

            modelBuilder.Entity("Dormitory.Entityes.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DormitoryId")
                        .HasColumnType("integer");

                    b.Property<int>("FreeBedCount")
                        .HasColumnType("integer");

                    b.Property<int>("NumRoom")
                        .HasColumnType("integer");

                    b.Property<int>("PersonCount")
                        .HasColumnType("integer");

                    b.Property<double>("RoomArea")
                        .HasColumnType("double precision");

                    b.Property<int>("RoomCount")
                        .HasColumnType("integer");

                    b.Property<string>("RoomSex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DormitoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Dormitory.Entityes.RoomInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseNum")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfDeparture")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfSettlement")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EarlyDepartureDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumRoom")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<string>("RoomSex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StudName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeRoom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomsInfo");
                });

            modelBuilder.Entity("Dormitory.Entityes.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("TypeRoom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Dormitory.Entityes.Room", b =>
                {
                    b.HasOne("Dormitory.Entityes.Dormitory", "Dormitory")
                        .WithMany("Rooms")
                        .HasForeignKey("DormitoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dormitory.Entityes.Type", "Type")
                        .WithMany("Rooms")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dormitory");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Dormitory.Entityes.RoomInfo", b =>
                {
                    b.HasOne("Dormitory.Entityes.Room", "Room")
                        .WithMany("RoomInfos")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Dormitory.Entityes.Dormitory", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Dormitory.Entityes.Room", b =>
                {
                    b.Navigation("RoomInfos");
                });

            modelBuilder.Entity("Dormitory.Entityes.Type", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
